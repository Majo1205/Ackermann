<launch>
  
<!-- START UP GAZEBO WITH EMPTY WORLD-->

<!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/empty.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
  </include>

<!-- ros_control mybot launch file -->
<include file="$(find ackermann_control)/launch/ackermann_control.launch" />


<!-- SPAWN MY ROBOT THANKS TO THE SPAWN_URDF NODE-->

<!-- Spawn a robot into Gazebo in urdf extension-->
<!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find ackermann_description)/urdf/ackermann.urdf -urdf -z 1 -model ackermann" /> -->

<!--///////////////////// XACRO EXTENSION SPAWN ALTERNATIVE-->


  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find ackermann_description)/urdf/ackermann.xacro'" />

<!-- Robot initial pose -->

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model ackermann -param robot_description -z 1"/>


</launch>
